---


# - name: User | Add Oracle user
#   user: name=cassandra   uid=12000 generate_ssh_key=yes append=yes state=present password=password
#   tags:
#     - user

# - name: Install required libraries
#   yum: name={{ packages_list }} state=present
  
# - stat: 
#     path: /tmp/apache-cassandra-3.7-bin.tar.gz
#   register: cassandra_source_file
  
# - name: download the source
#   become: yes
#   become_user: cassandra
#   get_url: 
#     url: https://archive.apache.org/dist/cassandra/3.7/apache-cassandra-3.7-bin.tar.gz
#     dest: /tmp/apache-cassandra-3.7-bin.tar.gz
#     mode: 0440
#   when: cassandra_source_file.stat.exists == False
  
# - stat:
#     path: /tmp/apache-cassandra-3.7-bin.tar.gz
#     checksum_algorithm: sha1
#   register: downloaded_file_checksum
  
# - name: download checksum from apache page
#   become: yes
#   become_user: cassandra
#   uri: url=https://archive.apache.org/dist/cassandra/3.7/apache-cassandra-3.7-bin.tar.gz.sha1 return_content=yes
#   register: apache_page_checksum
#   failed_when: downloaded_file_checksum.stat.checksum != apache_page_checksum.content
  
# - name: Create home directory

#   file: 
#     path: "{{ cassandra_home }}"
#     state: directory
#     owner: cassandra
#     group: cassandra
#     mode: 0755  
    
# - name: Extract cassandra source
#   become: yes
#   become_user: cassandra
#   unarchive:
#     src: /tmp/apache-cassandra-3.7-bin.tar.gz
#     dest: "{{ cassandra_home  }}"
#     extra_opts: [--strip-components=1]
#     remote_src: yes  
    
# - name: Export path
#   shell: "echo 'PATH=$PATH:{{ cassandra_path }}' > /etc/profile.d/custom-path.sh && . /etc/profile.d/custom-path.sh"

# - name: install the configuration file
#   become: yes
#   become_user: cassandra
#   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest=/tmp/cassandra.conf
  
# - name: copy the startup script
#   become: yes
#   become_user: cassandra
#   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.service.j2 dest=/tmp/cassandra_service.conf
    
    
# # - name: install the configuration file
# #   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest='{{ cassandra_home }}/conf/cassandra.yaml' mode=750
  
# # - name: copy the startup script
# #   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.service.j2 dest=/lib/systemd/system/cassandra.service owner=root group=root mode=755
    
# - name: start cassandra service
#   ansible.builtin.systemd:
#     name=cassandra 
#     state=started
#     daemon_reload=true
#   notify:
#   - CheckClusterStatus
#   - GetClusterStatusOutput
#   - DisplayClusterStatusOutput

- name: Stop firewall 
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    state: stopped
- name: Enable ssh to allow password login 
  lineinfile: 
    path: /etc/ssh/sshd_config
    regexp: "^{{ item.regex }}"
    line: "{{ item.regex }}={{ item.value }}"
  with_items:
    - { regex: "PasswordAuthentication", value: "yes" }
- name: Create user {{username}}
  user: name={{item}} generate_ssh_key=yes append=yes state=present password=password
  #when: role_separation
  with_items: "{{username}}"
  tags:
    - user
- name: "Allow  users hanh to sudo without a password"
  lineinfile:
    dest: "/etc/sudoers" # path: in version 2.3
    state: "present"
    regexp: "^%{{username}}"
    line: "%{{username}} ALL=(ALL) NOPASSWD: ALL"

- name: Restart sshd  
  ansible.builtin.systemd:
    name: sshd
    enabled: yes
    state: restarted
    daemon_reload: yes

# - name: Install required libraries
#   yum: name = {{ packages_list }} state=present

- name: Install java 8 libraries
  yum: 
    name: java-1.8.0-openjdk.x86_64 
    state: present

- name: Create cassandra repositories
  copy: 
    dest: /etc/yum.repos.d/cassandra.repo
    content: |
      # [cassandra]
      # name=Apache Cassandra
      # baseurl=https://www.apache.org/dist/cassandra/redhat/311x/
      # gpgcheck=1
      # repo_gpgcheck=1 
      # gpgkey=https://www.apache.org/dist/cassandra/KEYS

      [datastax] 
      name=DataStax Repo for DataStax Enterprise
      baseurl=https://rpm.datastax.com/enterprise/
      enabled=1
      gpgcheck=0
      gpgkey=https://rpm.datastax.com/rpm/repo_key

- name: Create cassandra group
  group: name=cassandra  state=present
- name: Create cassandra user
  user: name=cassandra  group=cassandra  generate_ssh_key=yes append=yes state=present password=password
  tags:
    - cassandrauser


- name: Create directory
  file:
    path: "{{item}}"
    state: directory
    owner: cassandra
    group: cassandra
    mode: 0750
  with_items:
    - /var/log/cassandra
    - /var/lib/dsefs
    - "{{cassandra_home}}"    
    - "{{cassandra_data_directory}}"
    - "{{cassandra_commitlog_directory}}"
    - "{{cassandra_hints_directory}}"
    - "{{cdc_raw_directory}}"
    - "{{cassandra_worker}}"
    - "{{cassandra_master}}"
    - "{{cassandra_rdd}}"

- name: Copy dse binary
  copy:
    src: /Users/hanhnguyen/Downloads/{{dse_binary}}
    dest: /tmp/{{dse_binary}}
    owner: cassandra
    group: cassandra
    mode: 0755

- name: Extract cassandra binary
  unarchive:
    src: "/tmp/{{dse_binary}}"
    dest: "{{ cassandra_home  }}"
    owner: cassandra
    group: cassandra
    extra_opts: [--strip-components=1]
    remote_src: yes  



- name: install the configuration file
  template: src=templates/cassandra_6.yaml.j2 dest={{cassandra_config}}  owner=cassandra group=cassandra mode=755

- name: install rack configuration file
  template: src=templates/cassandra-rackdc.properties.j2 dest={{cassandra_rack}}  owner=cassandra group=cassandra mode=755

- name: install the dse file
  template: src=templates/dse.yaml.j2 dest={{dse_config}}  owner=cassandra group=cassandra mode=755

- name: bash_profile for oracle cassandra
  blockinfile:
    path: /home/cassandra/.bash_profile
    insertafter: '#### for cassandra #####'
    state: present
    block: |
      export PATH=$PATH:$HOME/bin
      export PATH=/usr/bin:$PATH:{{cassandra_path}}
      export LD_LIBRARY_PATH=/usr/lib:/lib
      export NLS_LANG=AMERICAN_AMERICA.UTF8
      export NLS_DATE_FORMAT='DD-MM-YYYY:HH24:MI:SS'

- name: Stop cassandra service
  shell: "ps -ef | grep -i dse | grep -v grep  | awk '{ print $2 }' | xargs kill -9 "
 
- name:  Start cassandra service
  become: yes
  become_user: cassandra
  raw: nohup {{cassandra_path}}/dse cassandra -k </dev/null >/dev/null 2>&1 &
  register: service_status
- ansible.builtin.debug:
    msg: 
    - "{{service_status}}"