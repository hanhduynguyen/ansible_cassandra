---


# - name: User | Add Oracle user
#   user: name=cassandra   uid=12000 generate_ssh_key=yes append=yes state=present password=password
#   tags:
#     - user

# - name: Install required libraries
#   yum: name={{ packages_list }} state=present
  
# - stat: 
#     path: /tmp/apache-cassandra-3.7-bin.tar.gz
#   register: cassandra_source_file
  
# - name: download the source
#   become: yes
#   become_user: cassandra
#   get_url: 
#     url: https://archive.apache.org/dist/cassandra/3.7/apache-cassandra-3.7-bin.tar.gz
#     dest: /tmp/apache-cassandra-3.7-bin.tar.gz
#     mode: 0440
#   when: cassandra_source_file.stat.exists == False
  
# - stat:
#     path: /tmp/apache-cassandra-3.7-bin.tar.gz
#     checksum_algorithm: sha1
#   register: downloaded_file_checksum
  
# - name: download checksum from apache page
#   become: yes
#   become_user: cassandra
#   uri: url=https://archive.apache.org/dist/cassandra/3.7/apache-cassandra-3.7-bin.tar.gz.sha1 return_content=yes
#   register: apache_page_checksum
#   failed_when: downloaded_file_checksum.stat.checksum != apache_page_checksum.content
  
# - name: Create home directory

#   file: 
#     path: "{{ cassandra_home }}"
#     state: directory
#     owner: cassandra
#     group: cassandra
#     mode: 0755  
    
# - name: Extract cassandra source
#   become: yes
#   become_user: cassandra
#   unarchive:
#     src: /tmp/apache-cassandra-3.7-bin.tar.gz
#     dest: "{{ cassandra_home  }}"
#     extra_opts: [--strip-components=1]
#     remote_src: yes  
    
# - name: Export path
#   shell: "echo 'PATH=$PATH:{{ cassandra_path }}' > /etc/profile.d/custom-path.sh && . /etc/profile.d/custom-path.sh"

# - name: install the configuration file
#   become: yes
#   become_user: cassandra
#   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest=/tmp/cassandra.conf
  
# - name: copy the startup script
#   become: yes
#   become_user: cassandra
#   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.service.j2 dest=/tmp/cassandra_service.conf
    
    
# # - name: install the configuration file
# #   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest='{{ cassandra_home }}/conf/cassandra.yaml' mode=750
  
# # - name: copy the startup script
# #   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.service.j2 dest=/lib/systemd/system/cassandra.service owner=root group=root mode=755
    
# - name: start cassandra service
#   ansible.builtin.systemd:
#     name=cassandra 
#     state=started
#     daemon_reload=true
#   notify:
#   - CheckClusterStatus
#   - GetClusterStatusOutput
#   - DisplayClusterStatusOutput

- name: Install required libraries
  yum: name = {{ packages_list }} state=present

- name: Install java 8 libraries
  yum: 
    name: java-1.8.0-openjdk.x86_64 
    state: present

- name: Create cassandra repositories
  copy: 
    dest: /etc/yum.repos.d/cassandra.repo
    content: |
      # [cassandra]
      # name=Apache Cassandra
      # baseurl=https://www.apache.org/dist/cassandra/redhat/311x/
      # gpgcheck=1
      # repo_gpgcheck=1 
      # gpgkey=https://www.apache.org/dist/cassandra/KEYS

      [datastax] 
      name=DataStax Repo for DataStax Enterprise
      baseurl=https://rpm.datastax.com/enterprise/
      enabled=1
      gpgcheck=0
      gpgkey=https://rpm.datastax.com/rpm/repo_key

- name: Install required cassandara libraries
  yum: name=dse-full state=present

# - name: Install cassandra
#   yum: name=cassandra state=present

- name: Enable  cassandra  service
  shell: 'systemctl enable dse'
  # ansible.builtin.systemd:
  #   name: dse
  #   enabled: yes


- name: Stop firewall 
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    state: stopped

- name: install the configuration file
  template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest={{cassandra_config}}  owner=cassandra group=cassandra mode=755

- name: install rack configuration file
  template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra-rackdc.properties.j2 dest={{cassandra_rack}}  owner=cassandra group=cassandra mode=755
    
# - name: Copy dc name file
#   template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.yaml.j2 dest='/tmp/cassandra.yaml'  owner=cassandra group=cassandra mode=755
  
- name: copy the startup script
  template: src=/Users/duyhanhnguyen/git/oracle/hanh/vagrant_ansible/vagrant/cassandra/cassandra/templates/cassandra.service.j2 dest=/tmp/cassandra.service.conf owner=cassandra group=cassandra mode=755

- name: Configure cassandra cluster  
  shell: echo 'Configure cassandra cluster'

- name: Stop cassandra 
  ansible.builtin.systemd:
    name: dse.service
    state: stopped

- name: Clear  cassandra  data file
  shell: 'rm -rf {{cassandra_home}}/*'

# - name: Copy cassandra yam file
#   shell: 'cp -rp /tmp/cassandra.yaml {{cassandra_config}}'
#   tags:
#     - copy yaml file

- name: Create cassandra data directory
  ansible.builtin.file:
    path: "{{cassandra_data_directory}}"
    state: directory
    owner: cassandra
    group: cassandra
    mode: 0754
    recurse: yes

- name: Start start cassandra 
  ansible.builtin.systemd:
    name: dse.service
    state: started
  
- name: Enable  auto start cassandra  service
  ansible.builtin.systemd:
    name: dse.service
    enabled: yes
    state: started